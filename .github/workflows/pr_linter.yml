name: Pull Request Lint

on:
  pull_request:
    types: ['opened', 'edited', 'synchronize', 'reopened']

jobs:
  pr_linter:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      
      - name: Running on a pull request branch.
        if: steps.branch-name.outputs.is_default == 'false'
        run: |
          echo "env_branch_name=${{ steps.branch-name.outputs.current_branch }}" >> $GITHUB_ENV
          local_branch_name=${{ steps.branch-name.outputs.current_branch }}
          regex='^[0-9]{4}-' 
          if [[ $local_branch_name =~ $regex ]]; then echo 'branch matched regex!'; else echo 'branch did not match regex!!!' && exit 1; fi

      - name: PR JSON information
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        with:
          # Authetication token to access GitHub APIs. (Can be omitted by default.)
          github-token: ${{ github.token }}
          # Verbose setting SHA when using Pull_Request event trigger to fix #16. (For push even trigger this is not necessary.)
          sha: ${{ github.event.pull_request.head.sha }}
          # Only return if PR is still open. (By default it returns PRs in any state.)
          filterOutClosed: true
          # Only return if PR is not in draft state. (By default it returns PRs in any state.)
          filterOutDraft: true

      - run: echo "PR ${prNumber} ${prTitle} at ${prUrl} is ${prJSON}"
        id: set-env
        if: steps.PR.outcome == 'success' && steps.PR.outputs.pr
        env:
          # JSON object with the full PR object
          # toJSON(fromJSON(...pr)) parses it into memory and then format is with pretty-print.
          prJSON: ${{ toJSON(fromJSON(steps.PR.outputs.pr)) }}
          # Direct access to common PR properties
          prNumber: ${{ steps.PR.outputs.number }}
          prUrl: ${{ steps.PR.outputs.pr_url }}
          prTitle: ${{ steps.PR.outputs.pr_title }}
          prBody: ${{ steps.PR.outputs.pr_body }}
          prCreatedAt: ${{ steps.PR.outputs.pr_created_at }}
          prMergedAt: ${{ steps.PR.outputs.pr_merged_at }}
          prClosedAt: ${{ steps.PR.outputs.pr_closed_at }}
          prLabel: ${{ steps.PR.outputs.pr_labels }}

      # - if: ${{ steps.set-env.outputs.body-check == 'false' }}
      - name: Add AB link in PR description
        run: echo "${prBody}"
        # uses: DerekRoberts/action-pr-description-add@v0.0.2
        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
        #   add_markdown: Fixed AB#${{ env.env_branch_name }}